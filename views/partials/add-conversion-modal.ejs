<div class="modal-wrapper" id="add-conversion-modal">
  <div class="modal">
    <a href="#" onclick="closeModal()" class="modal-close">+</a>
    <div class="modal-title">
      <h2>Create New Conversation</h2>
    </div>
    <div class="modal-body">
      <form
        method="post"
        action="/users"
        enctype="multipart/form-data"
        id="add-conversion-form"
      >
        <input type="text" id="userInput" placeholder="Search by Name, Mobile, Email" name="name" />
        <p class="error"></p>
        <div class="search-users"></div>
      </form>
    </div>
  </div>
</div>
<script>
  let typingTimer;
  const doneTypingInterval = 500;
  const modal = document.querySelector("#add-conversion-modal");
  const form = document.querySelector("#add-conversion-form");
  const searchInput = document.querySelector("#userInput");
  let userPlaceholder = document.querySelector('.search-users');
  // success toast
  const conversionFSuccessToast = Toastify({
    text: "Conversation create successfull.",
    duration: 1000,
  });
  const conversionFailureToast = Toastify({
    text: "Error creating a conversion",
    duration: 1000,
  });
  function closeModal() {
    modal.style.display = "none";

    userPlaceholder.style.display = 'none'

    searchInput.value = ""
  }
  function openModal() {
    modal.style.display = "block";
  }

  // on keyup, start countdown
  searchInput.addEventListener("keyup", function(){
    clearTimeout(typingTimer);
    userPlaceholder.style.display = 'none'

    if(searchInput.value){
      typingTimer = setTimeout(searchUsers, doneTypingInterval);
    }
  });

  searchInput.addEventListener("keydown", function(){
    clearTimeout(typingTimer);
  });

  //send request for search
  async function searchUsers(){
    // send request by user
    let response = await fetch("/inbox/search", {
      method: "POST",
      body: JSON.stringify({
        user: searchInput.value,
      }),
      headers: {
        'Content-type': 'application/json; charset=UTF-8'
      }
    });

    // get response
    let result = await response.json();


    if(result.errors){
      errorPlaceholder = document.querySelector("p.error");
      errorPlaceholder.textContent = result.errors.common.msg;
      errorPlaceholder.style.display = 'block';
    } else {
      if(result.length > 0){
        let generateHtml = "<ul>";
        result.forEach((user) => {
          const avatar = user.avatar ? "./uploads/avatars/" + user.avatar : "./images/nophoto.png";
          generateHtml += `<li onclick="createConversion('${user._id}', '${user.name}', '${user.avatar}')">
            <div class="user">
              <div class="user-avatar">
                <img src="${avatar}" />
              </div>
              <div class="username">${user.name}</div>
            </div>
            </li>
            `;
          });
        generateHtml += "</ul>";
        userPlaceholder.innerHTML = generateHtml;
        userPlaceholder.style.display = 'block'
      }
    }
  }

  async function createConversion(participant_id, name, avatar){
    try{
      // send request
      const response = await fetch("inbox/conversion", {
        method: "POST",
        body: JSON.stringify({
          participant: name,
          id: participant_id,
          avatar: avatar != "undefined" ? avatar : null
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8'
        }
      })

      // get response
      const result = await response.json();

      if(!result.errors){
        userPlaceholder.style.display = 'none';
        searchInput.value = name;

        conversionFSuccessToast.showToast();

        setTimeout(() => {
          location.reload();
        }, 1000)
      } else {
        throw new Error(result.errors.common.msg);
      }
    } catch (err){
      conversionFailureToast.showToast();
    }
  }

</script>