<%- include('./layouts/app') %>
    <div id="widget-area" class="z-20 items-center">
        <div class="widget-wrapper bg-light-color w-0 invisible transition-weight ease-out duration-300">
            <div class="p-4 flex items-center flex-col gap-3 justify-center h-screen">
                <h2 class="text-2xl text-dark-color font-bold">Theme Setting</h2>
                <div class="flex flex-col gap-3">
                    <button class="p-2 rounded-md" style="background-color: rgb(229 231 235 / 0.4);" onclick="setTheme('default')">Default</button>
                    <button class="p-2 rounded-md" style="background-color: rgb(31 41 55);" onclick="setTheme('dark')">Dark</button>
                    <button class="p-2 rounded-md" style="background-color: rgb(29 78 216);" onclick="setTheme('blue')">Blue</button>
                    <button class="p-2 rounded-md" style="background-color: #29a12e;" onclick="setTheme('green')">Green</button>
                </div>
            </div>
        </div>
        <div class="angle relative flex items-center justify-center ml-3 widget-toggle cursor-pointer w-3 h-14 " >
            <div class="h-4 w-1 rounded-full bg-light-color rotate-[150deg] absolute mb-[.6rem]" style="background-color: white;" ></div>
            <div class="h-4 w-1 rounded-full bg-light-color rotate-[30deg] absolute mt-[.7rem]" style="background-color: white;" ></div>
        </div>
    </div>
    <div class="h-screen flex items-center justify-center ">
        <div class='flex flex-col items-center justify-center p-3 sm:p-0 w-full sm:w-10/12 h-screen overflow-hidden mx-auto'>
            <div class="main-content-wrapper flex justify-between w-full h-[90vh] overflow-hidden p-1 rounded-lg shadow-md bg-clip-padding bg-dark-color backgrop-glass bg-opacity-0">
                <!-- <div class=""> -->
                    <div class="flex flex-col w-20 sm:w-4/12 border-r border-gray-400">
                        <div class="relative flex items-center justify-between h-14 px-3 py-2 bg-light-color">
                            <% if(loggedInUser.avatar){ %>
                                <img src="./uploads/avatars/<%= loggedInUser.avatar %>" alt="" class="w-10 h-10 rounded-full cursor-pointer" id="user-avatar">
                            <% }else{ %>
                                <div class="bg-light-color hover:bg-dark-color flex items-center justify-center text-neutral-content rounded-full w-10 h-10 cursor-pointer" id="user-avatar">
                                    <span class="text-3xl"><%= loggedInUser.username[0].toUpperCase() %></span>
                                </div>
                            <% } %>
                            <div class="hidden sm:flex gap-4 items-center justify-end ">
                                <a href="/inbox">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color">
                                        <path strokeLinecap="round" strokeLinejoin="round" d="M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155" />
                                      </svg>                                      
                                </a>
                                                                                    
                                <div class="relative" >
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color " id="conversation-dots">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z" />
                                    </svg>
                                    <div class="dropdown min-w-max absolute right-0 top-8 py-3 bg-light-color app-shadow-2xl hidden opacity-0 rounded-md" id="conversation-dots-dropdown">
                                        <div class="text-color">
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                                              </svg>
                                               New Message</a>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">Select Chats</a>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 0 1 1.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.559.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.894.149c-.424.07-.764.383-.929.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 0 1-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.398.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 0 1-.12-1.45l.527-.737c.25-.35.272-.806.108-1.204-.165-.397-.506-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.108-1.204l-.526-.738a1.125 1.125 0 0 1 .12-1.45l.773-.773a1.125 1.125 0 0 1 1.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894Z" />
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                                                  </svg>
                                                  
                                                  Settings</a>
                                            <a class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer " onclick="logout()">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z" />
                                                  </svg>
                                                  
                                                Logout</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Profile off canvas menu start -->
                            <%- include('./partials/profile') %>
                            <!-- Profile off canvas menu end -->

                            <!-- conversation create off canvas menu start -->
                            <%- include('./partials/conversation_create') %>
                            <!-- conversation create off canvas menu end -->
                        </div> 
                        <!-- conversation search start -->
                        <div class="hidden sm:flex items-center gap-3 justify-between h-8 my-2 px-3">
                            <div class="flex gap-4 items-center w-full bg-light-color rounded-md px-3 p-1 text-soft-color">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                                </svg>
                                <input type="text" placeholder="Search" class="user-search-input bg-transparent focus:outline-none border-none" onkeyup="filterUserDataset(event)">
                            </div>
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12" />
                            </svg>
                        </div>
                        <!-- conversation search end -->

                        <!-- conversation list start -->
                        <div id="user-content-wrapper" class="h-[76vh] overflow-y-scroll chat-content-wrapper ">
                            <!-- <% if(data && data.length === 0) { %>
                            <div class="flex flex-col items-center gap-3 justify-center text-center p-2 sm:px-3 py-2 h-full text-soft-color hover-bg-light-color cursor-pointer">
                                <div>
                                    <img src="./images/no-conversation.png" alt="" class="w-32">
                                </div>
                                <div>
                                    <h3 class="text-md font-bold">No conversation yet</h3>
                                    <p>Create conversation to contact others</p>
                                </div>
                            </div>
                            <% } %> -->
                        </div>
                        <!-- conversation list end -->

                    </div>
                    <div class="flex flex-col w-full sm:w-8/12 justify-between ">
                        <div id="chat-message-title-container" class="flex items-center justify-between px-3 h-14 bg-light-color invisible">
                            <div class="flex items-center gap-4 text-color">
                                <div id="chat-message-avatar-container">
                                    <img src="./images/logo.png" alt="" class="w-10 h-10 rounded-full">
                                </div>
                                <div class="leading-none">
                                    <h3 id="chat-message-title-name" class="text-lg font-bold"></h3>
                                    <span class="text-sm text-dark-color">Last seen 2:35 pm</span>
                                </div>
                            </div>
                            <div class="flex gap-4 items-center justify-end ">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color" id="message-search-icon">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                                    </svg>

                                <input type="text" placeholder="Search" class="bg-transparent focus:outline-none border-none w-full" style="display: none;" id="message-search-input">
                                                
                                <div class="relative" >
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-soft-color cursor-pointer hover:text-color " id="message-dots">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z" />
                                    </svg>
                                    <div class="dropdown min-w-max absolute right-0 top-8 py-3 bg-light-color app-shadow-2xl hidden opacity-0 rounded-md" id="message-dots-dropdown">
                                        <div class="text-color">
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                                                </svg>Contact Info</a>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">Select Messages</a>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M8.625 9.75a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0H8.25m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0H12m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 0 1 .778-.332 48.294 48.294 0 0 0 5.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018Z" />
                                                </svg>Close Chat</a>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0" />
                                                </svg>Mute Notifications</a>
                                            <a class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer" onclick="deleteMeassage()">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                                                </svg>Delete Chat</a>
                                            <div class="chat-message-block-container">
                                                <div class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer " onclick="userBlock()">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M18.364 18.364A9 9 0 0 0 5.636 5.636m12.728 12.728A9 9 0 0 1 5.636 5.636m12.728 12.728L5.636 5.636" />
                                                    </svg>Block</div>
                                            </div>
                                            <a href="" class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z" />
                                                </svg>Report</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="user-container-list" class="flex flex-col flex-col gap-4 h-[calc(85vh-112px)] p-3 overflow-y-scroll">
                            
                            <div class="flex gap-2 text-soft-color items-center justify-center h-full">
                                <h1 class="text-2xl font-bold">Select a conversation</h1>
                            </div>
                            <!-- First message aligned to the left -->
                            <!-- <div class="flex gap-2 text-soft-color items-start">
                                <img src="./images/logo.png" alt="" class="w-10 h-10 rounded-full">
                                <div class="w-6/12">
                                    <div class="bg-light-color text-sm rounded-md p-2">Hi Mr Anonymous</div>
                                    <div class="attachments grid grid-cols-2 gap-2 mt-2 bg-light-color p-2 rounded-md">
                                        <img src="./images/logo.png" alt="" class="rounded-md h-auto w-full">
                                        <img src="./images/logo.png" alt="" class="rounded-md h-auto w-full">
                                        <img src="./images/logo.png" alt="" class="rounded-md h-auto w-full col-span-2">
                                    </div>
                                    <div class="text-sm text-color mt-1">just now</div>
                                </div>
                            </div> -->
                            <!-- Second message aligned to the right -->
                            <!-- <div class="flex gap-2 text-soft-color items-end justify-end">
                                <div class="w-6/12">
                                    <div class="bg-light-color text-sm rounded-md p-2">Hi Mr Anonymous</div>
                                    <div class="attachments grid grid-cols-1 mt-2 bg-light-color p-2 rounded-md">
                                        <img src="./images/logo.png" alt="" class="rounded-md w-full h-auto">
                                    </div>
                                    <div class="text-sm text-color mt-1">just now</div>
                                </div>
                            </div> -->
                        </div>
                        <!-- chat-form-container start -->
                        <!-- <div id="chat-form-container" class="h-14 bg-light-color text-soft-color invisible">
                            <div class="blocked-message-form-container grid grid-cols-1 content-center text-center hidden"></div>
                            <form id="chat-send-message-form" method="post" enctype="multipart/form-data" class="grid grid-cols-12 gap-2 px-3 content-center items-center">
                                <div >
                                    <label for="attachment" class="cursor-pointer">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244" />
                                          </svg>                                          
                                    </label>
                                    <input type="file" name="attachment" id="attachment" multiple class="hidden">
                                </div>
                                <div  class="col-span-10">
                                    <textarea type="text" name="message" placeholder="Type a message" autocomplete="off" class="w-full border-none outline-none h-auto bg-transparent  content-center placeholder:text-soft-color"></textarea>
                                </div>
                                <div class="flex items-center justify-end">
                                    <button type="submit">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5" />
                                          </svg>                                          
                                    </button>
                                </div>
                            </form>
                        </div> -->
                        <!-- chat-form-container end -->
                    </div>
                <!-- </div> -->
            </div>
        </div>
    </div>
    <!-- import socket io client from cdn -->
    <script src="./js/app.js"></script>

    <script>
        let userDataset;
        async function fetchUsers(){
            let response = await fetch('/users', {
                method: "POST",
                headers: {"Content-type": "application/json; charset=UTF-8"}
            });
            let result = await response.json();
                
                populateUserData(result);
                userDataset = result;
            return result;
        }
        fetchUsers();

        let participant = null; // selected conversation participt object
        let current_conversation_id; // selected conversation id
        let loggedInUserId = '<%= loggedInUser.user_id %>';
        // get conversations and print start
        const user_content_wrapper = document.querySelector("#user-content-wrapper");

        const populateUserData = (userDataset) => {

            let allUserHtml = '';
            if(userDataset && userDataset.length > 0){
                userDataset.forEach((user, index) => {
// console.log(user.);
                    let userHtml = '';
                        const userAvatar = user.avatar ? `<img src="./uploads/avatars/${user.avatar}" alt="${user.name}" class="w-10 h-10 rounded-full">` : `<div class="bg-light-color hover:bg-dark-color flex items-center justify-center text-neutral-content rounded-full w-10 h-10">
                                                    <span class="text-3xl">${user.name[0].toUpperCase()}</span>
                                                </div>`;
                        // Convert user object to a JSON string and escape quotes
                        const userJson = JSON.stringify(user).replace(/"/g, '&quot;');
                        userHtml = `<div class="flex items-center gap-3 p-2 sm:px-3 py-2 h-14 text-soft-color hover-bg-light-color cursor-pointer" onclick="getUserDetails(${userJson})">
                                <div>
                                    ${userAvatar}
                                </div>
                                <div class="hidden sm:flex items-center justify-between w-full py-1 leading-normal chat-content-info ${index !== userDataset.length - 1 ? ' border-b border-gray-200/40' : '' }">
                                    <div>
                                        <h3 class="text-md font-bold">${user.name}</h3>
                                        <span class="text-sm text-gray-300">Hi ! Mr Anonymous</span>
                                    </div>
                                </div>
                            </div>`;
                    allUserHtml += userHtml;
                    user_content_wrapper.innerHTML = allUserHtml;
                });
            }else{
                user_content_wrapper.innerHTML = `<div class="flex flex-col items-center gap-3 justify-center text-center p-2 sm:px-3 py-2 h-full text-soft-color hover-bg-light-color cursor-pointer">
                    <div>
                        <img src="./images/no-conversation.png" alt="" class="w-32">
                    </div>
                    <div>
                        <h3 class="text-md font-bold">No users yet</h3>
                        <p>Create user to contact others</p>
                    </div>
                </div>`
            }
        }
        // get conversations and print end

        // filter conversations start
        function filterUserDataset(event) {
            let user_search_input = document.querySelector(".user-search-input").value.toLowerCase();
            const filteredUserDataset = userDataset.filter(item =>
                user_search_input === '' ||
                item.name.toLowerCase().includes(user_search_input));
            populateUserData(filteredUserDataset);
        }
        // filter conversations end
    
        // get messages
        const chat_message_title_container = document.querySelector("#chat-message-title-container");
        const chat_message_avatar_container = document.querySelector("#chat-message-avatar-container");
        const chat_message_title_name = document.querySelector("#chat-message-title-name");
        const user_container_list = document.querySelector("#user-container-list");
        const chat_form_container = document.querySelector("#chat-form-container");

        async function getUserDetails(user){
            console.log(user)
            if(user && (Object.keys(user).length > 0)){
                let userInfoHtml = '';
                const avatar = user.avatar && user.avatar !== 'undefined' ? `<img src="./uploads/avatars/${user.avatar}" alt="${user.name}" class="bg-light-color w-52 h-52 rounded-full">` : `<div class="bg-light-color hover:bg-dark-color flex items-center justify-center text-neutral-content rounded-full w-52 h-52">
                                            <h2 class="text-3xl">${user.name}</h2>
                                    </div>`;

                let userHtml = `<div class="message-row flex flex-col gap-2 text-soft-color items-center justify-center">
                    ${avatar}
                        <h2 class=" text-2xl font-bold rounded-md w-fit">${user.name}</h2>
                        <div class="text-md text-dark-color mt-1">${status}</div>
                        <div class="text-md text-dark-color mt-1">${user.email}</div>
                        <div class="text-md text-dark-color mt-1">${user.mobile}</div>
                        <div class="text-md text-dark-color mt-1">${user.address}</div>
                </div>`;
                userInfoHtml += userHtml;
                user_container_list.innerHTML = userInfoHtml;
            }else{
                user_container_list.innerHTML = `<div class="message-row message-nothing flex gap-2 text-soft-color items-center justify-center h-full">
                                <h1 class="text-2xl font-bold">You don't have User</h1>
                            </div>`;
                toastr.warning(result.errors.common.msg);
            }
        }
        // end get messages

        // const chat_send_message_form = document.querySelector("#chat-send-message-form");
        // chat_send_message_form.onsubmit = async function(event){
        //     event.preventDefault();

        //     const formData = new FormData(chat_send_message_form);
        //     formData.append('conversation_id', current_conversation_id);
        //     formData.append('receiver_id', participant.id);
        //     formData.append('receiver_name', participant.name);
        //     formData.append('receiver_avatar', participant.avatar || null);

        //     let response = await fetch('/inbox/message', {
        //         method: 'POST',
        //         body: formData
        //     });

        //     let result = await response.json();

        //     if(!result.errors){
        //         chat_send_message_form.reset();
        //     }else{
        //         toastr.warning(result.errors.common.msg);
        //     }
        // }
    
        // message delete
        async function deleteMeassage(){
            if(!current_conversation_id){
                toastr.warning("You don't have select any conversation to delete messages.");
            }else{
                if(confirm("Are you sure to delete this messages!") == true){
                    let response = await fetch(`/inbox/message/delete/${current_conversation_id}`, {
                        method: "DELETE"
                    });
                    let result = await response.json();
                    if(!result.errors){
                        toastr.success(result.message);
                        user_container_list.innerHTML = `<div class="message-row message-nothing flex gap-2 text-soft-color items-center justify-center h-full">
                                    <h1 class="text-2xl font-bold">You don't have message</h1>
                                </div>`;
                    }else{
                        toastr.error(result.errors.common.msg);
                    }
                }
            }
        }
        // end message delete
        
        // message clear
        async function clearMessage(){
            if(!current_conversation_id){
                toastr.warning("You don't have select any conversation to clear messages.");
            }else{
                if(confirm("Are you sure to clear this messages!") == true){
                    let response = await fetch(`/inbox/message/clear/${current_conversation_id}`, {
                        method: "DELETE"
                    });
                    let result = await response.json();
                    if(!result.errors){
                        toastr.success(result.message);
                        user_container_list.innerHTML = `<div class="message-row message-nothing flex gap-2 text-soft-color items-center justify-center h-full">
                                    <h1 class="text-2xl font-bold">You don't have message</h1>
                                </div>`;
                    }else{
                        toastr.error(result.errors.common.msg);
                    }
                }
            }
        }
        // end message clear

        // user logout
        function logout (){
            fetch('/logout', {
                method: "DELETE"
            });
            toastr.success("Logout successfull.");
            setTimeout(() => {
                window.location.replace('/');
            }, 1000);
        }
        // end user logout

        // user block
        const chat_message_block_container = document.querySelector('.chat-message-block-container');
        async function userBlock(){
            if(participant != null){
                let response = await fetch('/users/block', {
                    method: "POST",
                    body: JSON.stringify({user_id: participant.id}),
                    headers: {"Content-type": "application/json; charset=UTF-8"}
                });
                let result = await response.json();
                if(!result.errors){
                    toastr.success(result.message);
                    updateBlockUnblockUi(loggedInUserId, result.participantUser.blockable)
                }else{
                    toastr.error(result.errors.common.msg);
                    updateBlockUnblockUi(loggedInUserId, null);
                }
            }else{
                toastr.warning("Please provide a valid person.");
            }
        }
        // end user block
    
        function updateBlockUnblockUi(loggedInUserId, blockable){
            if (loggedInUserId && blockable && blockable.some(blockedObj => blockedObj.id === loggedInUserId)) {
            // The logged in user is blocked by the participant user
            chat_message_block_container.innerHTML = `<div class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer " onclick="userUnblock()">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5" onclick="userUnblock()">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M18.364 18.364A9 9 0 0 0 5.636 5.636m12.728 12.728A9 9 0 0 1 5.636 5.636m12.728 12.728L5.636 5.636" />
                        </svg>Unblock</div>`;
                document.querySelector('.blocked-message-form-container').innerHTML = `<h4></h4>`;
            } else {
            // The logged in user is not blocked by the participant user
                chat_message_block_container.innerHTML = `<div class="flex items-center gap-3 px-4 py-1 hover-bg-dark-color cursor-pointer " onclick="userBlock()">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5" onclick="userUnblock()">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M18.364 18.364A9 9 0 0 0 5.636 5.636m12.728 12.728A9 9 0 0 1 5.636 5.636m12.728 12.728L5.636 5.636" />
                        </svg>Block</div>`;
            }
        }
    </script>
</body>
</html>